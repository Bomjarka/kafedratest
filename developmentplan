# План разработки

1. Требование R1.7
    1 Для учёта времени и объёма данных необходимо в класс Params добавить несколько новых параметров в библиотеку Kotlinx, а именно (-ds,-de,-vol)
    2 Для работы с временем добавим класс DateAccess, если хотя бы один из методов класса вернёт false, то программа должна завершиться с exitCode 7
        2.1 В данный класс добавим метод isDate(ds,de), который будет проверять правильность формата дат, указанных в параметрах консоли, если даты верные, то true, иначе false
        2.2 Для работы с датами использовать java.time.LocalDate 
        2.3 Так же добавим метод isVol(vol), который будет проверять значение параметра -vol на соответствие целочисленному типу (возможно имеет смысл эту проверку включить в Params, но тогда класс будет перенагруженным)
    3 В loginpass.kt необходимо добавить ещё одну перегрузку к функции validate для работы с 7 параметрами  
    4 Добавить класс Logs, который будет отвечать за запись успешных аутентификаций в программе
        4.1 Добавить метод createLog(user.login, role,res,ds,de,vol), который будет создавать запись в loglist
    5 Переработать класс ValidateService в 3 класса AuthenticationService, AuthorizationService, AccountingService   
        
        
 Тесты (опускаем предыдущие 2 этапа):
 1) -ds "2019-11-26", -de "2019-11-27", -vol "25" - код 0, ошибок нет
 2) -ds "2019-17-26", -de "2019-11-27", -vol "25" - код 7, ошибка при попытке распарсить ds
 3) -ds "2019-17-26", -de "2019-11-57", -vol "25" - код 7, ошибка при попытке распарсить de
 4) -ds "2019-17-26", -de "2019-11-27", -vol "ten" - код 7, ошибка при попытке распарсить vol
 5) -ds "2019-17-26",-vol "25", -de "2019-11-27"  - код 0, ошибок нет, т.к. порядок указания параметров не важен



